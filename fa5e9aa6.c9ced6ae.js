(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{116:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return r})),t.d(n,"metadata",(function(){return c})),t.d(n,"rightToc",(function(){return s})),t.d(n,"default",(function(){return d}));var a=t(2),i=t(6),o=(t(0),t(118)),r={id:"bip-0010",title:"BIP-0010"},c={id:"bip-0010",title:"BIP-0010",description:"`",source:"@site/docs/bip-0010.md",permalink:"/BIPS_website/docs/bip-0010",editUrl:"https://github.com/anoop-b/BIPS_website/edit/master/docs/bip-0010.md",sidebar:"someSidebar",previous:{title:"BIP-0009",permalink:"/BIPS_website/docs/bip-0009"},next:{title:"BIP-0011",permalink:"/BIPS_website/docs/bip-0011"}},s=[{value:"Motivation",id:"motivation",children:[]},{value:"Specification",id:"specification",children:[]},{value:"Reference Implementation",id:"reference-implementation",children:[]}],l={rightToc:s};function d(e){var n=e.components,t=Object(i.a)(e,["components"]);return Object(o.b)("wrapper",Object(a.a)({},l,t,{components:n,mdxType:"MDXLayout"}),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{}),"BIP: 10\nLayer: Applications\nTitle: Multi-Sig Transaction Distribution\nAuthor: Alan Reiner &lt;etotheipi@gmail.com&gt;\nComments-Summary: No comments yet.\nComments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-0010\nStatus: Withdrawn\nType: Informational\nCreated: 2011-10-28\n")),Object(o.b)("p",null,"A multi-signature transaction is one where a certain number of\nBitcoins are ",'"',"encumbered",'"'," with more than one recipient address. The\nsubsequent transaction that spends these coins will require each party\ninvolved (or some subset, depending on the script), to see the proposed\ntransaction and sign it with their private key. This necessarily\nrequires collaboration between all parties -- to propose a distribution\nof encumbered funds, collect signatures from all necessary participants,\nand then broadcast the completed transaction."),Object(o.b)("p",null,"This BIP describes a way standardize the encoding of proposal\ntransactions, to assist with signature collection and broadcast (which\nincludes regular, 1-of-1 transactions requiring signatures from an\noffline computer). The goal is to encourage a standard that guarantees\ninteroperability of all programs that implement it."),Object(o.b)("h2",{id:"motivation"},"Motivation"),Object(o.b)("p",null,"The enabling of multi-signature transactions in Bitcoin will\nintroduce a great deal of extra functionality to the users of the\nnetwork, but also a great deal of extra complexity. Executing a\nmulti-signature tx will be a multi-step process, and will potentially\nget worse with multiple clients, each implementing this process\ndifferently. By providing an efficient, standardized technique, we can\nimprove the chance that developers will adopt compatible protocols and\nnot bifurcate the user-base based on client selection."),Object(o.b)("p",null,"In addition to providing a general encoding scheme for transaction\nsigning/collection, it does not require the signing device to hold any\nblockchain information (all information needed for verification and\nsigning is part of the encoding). This enables the existence of very\nlightweight devices that can be used for signing since they do not need\nthe blockchain -- only a minimal set of Bitcoin tools and an ECDSA\nmodule. Therefore, BIP 0010 has benefit beyond just multi-signature\ntransactions."),Object(o.b)("h2",{id:"specification"},"Specification"),Object(o.b)("p",null,"This BIP proposes the following process, with terms in quotes\nreferring to recommended terminology that should be encouraged across\nall implementations."),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},"One party will initiate this process by creating a ",'"',"Distribution Proposal",'"',", which could be abbreviated DP, or TxDP"),Object(o.b)("li",{parentName:"ol"},"The\nuser creating the TxDP (the preparer) will create the transaction as\nthey would like to see it spent, but with blank TxIn scripts (where the\nsignatures scripts will eventually go)."),Object(o.b)("li",{parentName:"ol"},"The proposed transaction\nwill be spending a set of unspent TxOuts available in the blockchain.\nThe full transactions containing these TxOuts will be serialized and\nincluded, as well. This so that the values of the TxIns can be verified\nbefore signing (the prev-tx-hash is part of the data being signed, but\nthe value is not). By including the full tx, the signing party can\nverify that the tx matches the OutPoint hash, and then verify input\nvalues, all without any access to the blockchain."),Object(o.b)("li",{parentName:"ol"},"The TxDP will\nhave an ",'"',"DP ID",'"'," or ",'"',"Unsigned ID",'"'," which is the hash of the proposed\ntransaction with blanked scripts, in Base58. This is a specific naming\nconvention to make sure it is not confused with the actual the\ntransaction ID that it will have after it is broadcast (the transaction\nID cannot be determined until after all signatures are collected). The\nfinal Tx ID can be referred to as its ",'"',"Broadcast ID",'"',", in order to\ndistinguish it from the pre-signed ID."),Object(o.b)("li",{parentName:"ol"},"The TxDP will have a\npotentially-unordered list of sig-pubkey pairs which represent collected\nsignatures. If you receive a TxDP missing only your signature, you can\nbroadcast it as soon as you sign it."),Object(o.b)("li",{parentName:"ol"},"Identical TxDP objects\nwith different signatures can be easily combined. This allows one party\nto send out all the requests for signatures at once, and combine them\nall when they are received (instead of having to ",'"',"pass it around",'"',"."),Object(o.b)("li",{parentName:"ol"},"For cases where the TxDP might be put into a file or sent via email, it should use .txdp or .btcdp suffix")),Object(o.b)("p",null,"Anyone adopting BIP 0010 for multi-sig transactions will use the following format (without indentation):"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{}),'\'-----BEGIN-TRANSACTION-TXDPID-------\'\n ("_TXDIST_") (magicBytes) (base58Txid) (varIntTxSize)\n    (serializedTxListInHex_Line1)\n    (serializedTxListInHex_Line2)\n    (serializedTxListInHex_Line3)\n    ...\n ("_TXINPUT_") (00) (InputValue)\n    ("_SIG_") (AddrBase58) (SigBytes) (SigHexPart0)\n    (SigHexRemainingLines)\n    ("_SIG_") (AddrBase58) (SigBytes) (SigHexPart0)\n    (SigHexRemainingLines)\n ("_TXINPUT_") (01) (InputValue)\n    ("_SIG_") (AddrBase58) (SigBytes) (SigHexPart0)\n    (SigHexRemainingLines)\n ("_TXINPUT_") (02) (InputValue)\n \'-------END-TRANSACTION-TXDPID-------\'\n')),Object(o.b)("p",null,"The following is an example TxDP from Armory, produced while running on the test network. Its DPID is 3fX59xPj:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{}),"-----BEGIN-TRANSACTION-3fX59xPj-------------------------------------------------\n _TXDIST_fabfb5da_3fX59xPj_00a0\n 010000000292807c8e70a28c687daea2998d6273d074e56fa8a55a0b10556974cf2b526e61000000\n 0000ffffffffe3c1ee0711611b01af3dee55b1484f0d6b65d17dce4eff0e6e06242e6cf457e10000\n 000000ffffffff02b0feea0b000000001976a91457996661391fa4e95bed27d7e8fe47f47cb8e428\n 88ac00a0acb9030000001976a914dc504e07b1107110f601fb679dd3f56cee9ff71e88ac00000000\n 0100000001eb626e4f73d88f415a8e8cb32b8d73eed47aa1039d0ed2f013abdc741ce6828c010000\n 008c493046022100b0da540e4924518f8989a9da798ca2d9e761b69a173b8cc41a3e3e3c6d77cd50\n 022100ecfa61730e58005338420516744ef680428dcfc05022dec70a851365c8575b190141042dc5\n be3afa5887aee4a377032ed014361b0b9b61eb3ea6b8a8821bfe13ee4b65cd25d9630e4f227a53e8\n bf637f85452c9981bcbd64ef77e22ce97b0f547c783effffffff0200d6117e030000001976a914cf\n f580fd243f64f0ad7bf69faf41c0bf42d86d8988ac00205fa0120000001976a9148d573ef6984fd9\n f8847d420001f7ac49b222a24988ac000000000100000001f2782db40ae147398a31cff9c7cc3423\n 014a073a92e463741244330cc304168f000000008c493046022100c9311b9eef0cc69219cb96838f\n dd621530a80c46269a00dccc66498bc03ccf7a0221003742ee652a0a76fd28ad81aa73bb7f7a0a6a\n 81850af58f62d9a184d10e5eec30014104f815e8ef4cad584e04974889d7636e8933803d2e72991d\n b5288c9e953c2465533905f98b7b688898c7c1f0708f2e49f0dd0abc06859ffed5144e8a1018a4e8\n 63ffffffff02008c8647000000001976a914d4e211215967f8e3744693bf85f47eb4ee9567fc88ac\n 603d4e95010000001976a914e9a6b50901c1969d2b0fd43a3ccfa3fef3291efe88ac00000000\n _TXINPUT_00_150.00000000\n _SIG_mzUYGfqGpyXmppYpmWJ31Y4zTxR4ZCod22_00_008c\n 4930460221007699967c3ec09d072599558d2e7082fae0820206b63aa66afea124634ed11a080221\n 0003346f7e963e645ecae2855026dc7332eb7237012539b34cd441c3cef97fbd4d01410497d5e1a0\n 0e1db90e893d1f2e547e2ee83b5d6bf4ddaa3d514e6dc2d94b6bcb5a72be1fcec766b8c382502caa\n 9ec09fe478bad07d3f38ff47b2eb42e681c384cc\n _TXINPUT_01_12.00000000\n _SIG_mzvaN8JUhHLz3Gdec1zBRxs5rNaYLQnbD1_01_008c\n 49304602210081554f8b08a1ad8caa69e34f4794d54952dac7c5efcf2afe080985d6bd5b00770221\n 00dea20ca3dbae1d15ec61bec57b4b8062e7d7c47614aba032c5a32f651f471cfd014104c30936d2\n 456298a566aa76fefeab8a7cb7a91e8a936a11757c911b4c669f0434d12ab0936fc13986b156156f\n 9b389ed244bbb580112be07dbe23949a4764dffb\n -------END-TRANSACTION-3fX59xPj-------------------------------------------------\n")),Object(o.b)("p",null,"In this transaction, there are two inputs, one of 150 BTC and the\nother of 12 BTC. This transaction combines 162 BTC to create two\noutputs, one of 160 BTC, one 1.9995 BTC, and a tx fee of 0.0005. In\nthis TxDP, both inputs have been signed, and thus could broadcast\nimmediately."),Object(o.b)("p",null,"The style of communication is taken directly from PGP/GPG, which uses\nblocks of ASCII like this to communicate encrypted messages and\nsignatures. This serialization is compact, and will be interpretted the\nsame in all character encodings. It can be copied inline into an\nemail, or saved in a text file. The advantage over the analogous PGP\nencoding is that there are some human readable elements to it, for users\nthat wish to examine the TxDP packet manually, instead of requiring a\nprogram to parse the core elements of the TxDP."),Object(o.b)("p",null,"A party receiving this TxDP can simply add their signature to the\nappropriate ",Object(o.b)("em",{parentName:"p"},"TXINPUT")," line. If that is the last signature required,\nthey can broadcast it themselves. Any software that implements this\nstandard should be able to combine multiple TxDPs into a single TxDP.\nHowever, even without the programmatic support, a user could manually\ncombine them by copying the appropriate ",Object(o.b)("em",{parentName:"p"},"TXSIGS")," lines between\nserializations, though it is not the recommended method for combining\nTxDPs."),Object(o.b)("h2",{id:"reference-implementation"},"Reference Implementation"),Object(o.b)("p",null,"This proposal was implemented and tested in the older versions of ",Object(o.b)("em",{parentName:"p"},"Armory")," Bitcoin software for use in offline-wallet transaction signing (as a 1-of-1 transaction). Implementation can be found in ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/etotheipi/BitcoinArmory/blob/v0.91-beta/armoryengine/Transaction.py"}),"BitcoinArmory/Transaction.py at v0.91-beta \xb7 etotheipi/BitcoinArmory \xb7 GitHub")," under the class PyTxDistProposal. However, as of verion 0.92 released\nin July 2014, Armory no longer uses this proposal for offline wallet\ntransaction signing and has moved on to a new format."))}d.isMDXComponent=!0},118:function(e,n,t){"use strict";t.d(n,"a",(function(){return f})),t.d(n,"b",(function(){return u}));var a=t(0),i=t.n(a);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,i=function(e,n){if(null==e)return{};var t,a,i={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var l=i.a.createContext({}),d=function(e){var n=i.a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):c({},n,{},e)),t},f=function(e){var n=d(e.components);return i.a.createElement(l.Provider,{value:n},e.children)},b={inlineCode:"code",wrapper:function(e){var n=e.children;return i.a.createElement(i.a.Fragment,{},n)}},p=Object(a.forwardRef)((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,r=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),f=d(t),p=a,u=f["".concat(r,".").concat(p)]||f[p]||b[p]||o;return t?i.a.createElement(u,c({ref:n},l,{components:t})):i.a.createElement(u,c({ref:n},l))}));function u(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,r=new Array(o);r[0]=p;var c={};for(var s in n)hasOwnProperty.call(n,s)&&(c[s]=n[s]);c.originalType=e,c.mdxType="string"==typeof e?e:a,r[1]=c;for(var l=2;l<o;l++)r[l]=t[l];return i.a.createElement.apply(null,r)}return i.a.createElement.apply(null,t)}p.displayName="MDXCreateElement"}}]);